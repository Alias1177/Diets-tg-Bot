version: '3'

services:
  bot:
    build: ../diet-bot
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=fitness_bot
      - DB_SSL_MODE=disable
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - STRIPE_WEBHOOK_KEY=${STRIPE_WEBHOOK_KEY}
      - STRIPE_PRICE_ID=${STRIPE_PRICE_ID}
      - STRIPE_PRODUCT_ID=${STRIPE_PRODUCT_ID}
      - GPT_API_KEY=${GPT_API_KEY}
      - GPT_MODEL=gpt-4
      - SERVER_PORT=8080
    volumes:
      - ./config:/app/config
    networks:
      - bot-network
    ports:
      - "8080:8080"  # For webhooks
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3


  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fitness_bot
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bot-network
    ports:
      - "6432:5432"  # For external DB access
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


networks:
  bot-network:
    driver: bridge

volumes:
  postgres-data:
